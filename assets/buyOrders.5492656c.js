import{bm as l,b3 as i,b4 as o,aZ as u,bn as c}from"./index.b5420dcf.js";import{h as n}from"./moment.9709ab41.js";import{u as p}from"./report.3d39650f.js";const m=l("buyOrders",{state:()=>({activeTab:"tab1",selectedTab:0,selectedItems:0,totalTab:1,orders:[{title:"buyer1",icon:"mdi-account-outline",tab:"tab1",vendor_id:null,order_date:n().format("YYYY-MM-DD"),items:[{product_id:null,quantity:null,unit_price:null,total_price:null}],subtotal:0,charge:0,discount:0,collection:0,total:0,pay:0,balance:0}],status:0,selectedUpdateOrder:0,selectedUpdateOrderItem:0,updateOrders:[]}),getters:{order:t=>t.orders[t.selectedTab],item:t=>t.orders[t.selectedTab].items[t.selectedItems],updateOrder:t=>t.updateOrders.find(r=>r.order_code==t.selectedUpdateOrder),updateItem:t=>t.updateOrders.find(s=>s.order_code==t.selectedUpdateOrder).items.find(s=>s.item_id==t.selectedUpdateOrderItem)},actions:{setUnitType(t){this.unitType=this.createSelectData(t,"name","unit_id")},setCategoryList(t){this.categories=this.createSelectData(t,"name","category_id")},setProductTypeList(t){this.productTypes=t},async updateProductList(t){let r=await i.get(o.getProductList);this.productList=r.data.data},createSelectData(t,r,s){return t.map(e=>({title:e[r],value:e[s]}))},addProductItem(){this.selectedItems++,this.orders[this.selectedTab].items.push({product_id:null,quantity:0,unit_price:0,total_price:0})},addTab(){this.totalTab++;let t=this.totalTab;this.orders.push({title:`buyer${t}`,icon:"mdi-account-outline",tab:`tab${t}`,items:[{product_id:null,quantity:null,unit_price:null,total_price:null}],subtotal:0,charge:0,discount:0,collection:0,total:0,pay:0,balance:0})},selectTab(t){this.selectedTab=t,this.activeTab=this.orders[t].tab},updateProductData(){this.item.total_price=parseInt(this.item.unit_price)*parseInt(this.item.quantity||1);let t=0;this.order.items.forEach(r=>{t=t+r.total_price}),this.order.subtotal=t,this.order.total=t+this.order.discount,this.order.balance=this.order.total-this.order.pay,this.order.total=this.order.subtotal+this.order.charge+this.order.collection-this.order.discount,this.order.pay=this.order.total,this.order.balance=this.order.total-this.order.pay},async payment(){let t=this;await i.post(o.buyOrderStore,this.order).then(function(r){r.status?(t.resetOrder(),u().updateProductList(),c.toast("success","Purchase order create successfully")):c.toast("error","Purchase order create fail")}).catch(function(r){})},resetOrder(){this.orders[this.selectedTab].items=[];let t=this;setTimeout(()=>{t.addProductItem()},100),this.orders[this.selectedTab].subtotal=0,this.orders[this.selectedTab].discount=0,this.orders[this.selectedTab].total=0,this.orders[this.selectedTab].pay=0,this.orders[this.selectedTab].balance=0},async addUpdateOrder(t){let r=this.updateOrders.find(e=>e.order_code==t),s=null;if(r)this.selectedUpdateOrder=t,this.updateOrder.items[0].item_id;else{let e=await i.get(o.buyOrderDetails+"/"+t);e=e.data.data;let d=[];e.order_details.forEach(a=>{s||(s=a.purchase_order_item_id),d.push({item_id:a.purchase_order_item_id,product_id:a.product_id,quantity:a.qty,unit_price:a.purchase_price,total_price:a.total_purchase_price})}),this.updateOrders.push({purchase_order_id:e.purchase_order_id,order_code:t,vendor_id:e.vendor_id,vendor_contact:e.vendor_contact,order_date:e.order_date,items:d,subtotal:e.order_amount,labour:e.labour,discount:e.discount,collection:e.collection,total:e.payable_amount,pay:e.payment,balance:e.payable_amount-e.payment}),this.selectedUpdateOrder=t}this.selectedUpdateOrderItem=s},async removeOrder(t){try{let r=o.buyOrderDelete+"/"+t;if((await i.delete(r)).data.status){const e=p();let d=e.buyOrderList.items.findIndex(a=>a.purchase_order_id==t);e.buyOrderList.items.splice(d,1),c.toast("success","Purchase order remove successfully")}}catch(r){console.log(r)}},updateBalance(){this.order.balance=this.order.total-this.order.pay}}});export{m as u};
